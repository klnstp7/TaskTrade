//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.34209 版自动生成。
// 
#pragma warning disable 1591

namespace FlatForm.TaskTrade.Service.PeacockReportWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PeacockReportWSSoap", Namespace="http://tempuri.org/")]
    public partial class PeacockReportWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WSMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseSourceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PeacockReportWS() {
            this.Url = global::FlatForm.TaskTrade.Service.Properties.Settings.Default.Peacock_PEP_Service_PeacockReportWS_PeacockReportWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WSMethodCompletedEventHandler WSMethodCompleted;
        
        /// <remarks/>
        public event GetServiceListCompletedEventHandler GetServiceListCompleted;
        
        /// <remarks/>
        public event GetCaseSourceCompletedEventHandler GetCaseSourceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WSMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WSMethod(string inputDTOXML) {
            object[] results = this.Invoke("WSMethod", new object[] {
                        inputDTOXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSMethodAsync(string inputDTOXML) {
            this.WSMethodAsync(inputDTOXML, null);
        }
        
        /// <remarks/>
        public void WSMethodAsync(string inputDTOXML, object userState) {
            if ((this.WSMethodOperationCompleted == null)) {
                this.WSMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSMethodOperationCompleted);
            }
            this.InvokeAsync("WSMethod", new object[] {
                        inputDTOXML}, this.WSMethodOperationCompleted, userState);
        }
        
        private void OnWSMethodOperationCompleted(object arg) {
            if ((this.WSMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSMethodCompleted(this, new WSMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServiceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServiceList(string inputDTOXML) {
            object[] results = this.Invoke("GetServiceList", new object[] {
                        inputDTOXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceListAsync(string inputDTOXML) {
            this.GetServiceListAsync(inputDTOXML, null);
        }
        
        /// <remarks/>
        public void GetServiceListAsync(string inputDTOXML, object userState) {
            if ((this.GetServiceListOperationCompleted == null)) {
                this.GetServiceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceListOperationCompleted);
            }
            this.InvokeAsync("GetServiceList", new object[] {
                        inputDTOXML}, this.GetServiceListOperationCompleted, userState);
        }
        
        private void OnGetServiceListOperationCompleted(object arg) {
            if ((this.GetServiceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceListCompleted(this, new GetServiceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCaseSource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCaseSource(string Value) {
            object[] results = this.Invoke("GetCaseSource", new object[] {
                        Value});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseSourceAsync(string Value) {
            this.GetCaseSourceAsync(Value, null);
        }
        
        /// <remarks/>
        public void GetCaseSourceAsync(string Value, object userState) {
            if ((this.GetCaseSourceOperationCompleted == null)) {
                this.GetCaseSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseSourceOperationCompleted);
            }
            this.InvokeAsync("GetCaseSource", new object[] {
                        Value}, this.GetCaseSourceOperationCompleted, userState);
        }
        
        private void OnGetCaseSourceOperationCompleted(object arg) {
            if ((this.GetCaseSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseSourceCompleted(this, new GetCaseSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void WSMethodCompletedEventHandler(object sender, WSMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetServiceListCompletedEventHandler(object sender, GetServiceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCaseSourceCompletedEventHandler(object sender, GetCaseSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591